# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# ðŸ“¦ Compilation de la bibliothÃ¨que Adastra
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

# ðŸ”¹ Ajouter les sous-modules de adastra
add_subdirectory(tools)
add_subdirectory(utils)
add_subdirectory(crypto)
add_subdirectory(network)
add_subdirectory(storage)
add_subdirectory(core)
add_subdirectory(config)
add_subdirectory(test_utils)
add_subdirectory(ai) # commenter si inutilisÃ©

# ðŸ”¹ CrÃ©er la bibliothÃ¨que statique `adastra` avec un fichier source minimal
add_library(adastra STATIC dummy.cpp)

# ðŸ”¹ Lier tous les sous-modules
target_link_libraries(adastra PUBLIC
    tools
    utils
    crypto
    network
    storage
    core
    config
    test_utils
    ai

    Threads::Threads
    nlohmann_json::nlohmann_json
)

# ðŸ”¹ Inclure les headers
target_include_directories(adastra PUBLIC
    ${CMAKE_SOURCE_DIR}/include
)

# ðŸ”¹ Activer C++17
target_compile_features(adastra PUBLIC cxx_std_17)
